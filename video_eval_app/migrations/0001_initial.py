# Generated by Django 5.0.7 on 2024-08-02 06:19

import django.db.models.deletion
import functools
import jsonfield.fields
import uuid
import video_eval_app.storage
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invitations', '0004_auto_20230328_1430'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('token', models.UUIDField(default=uuid.uuid4)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='datasets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('manage_dataset', 'Manage dataset'),),
            },
        ),
        migrations.CreateModel(
            name='DatasetVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtitles', models.FileField(null=True, upload_to=functools.partial(video_eval_app.storage.uuid_file_name, *('sub',), **{}))),
                ('audio', models.FileField(null=True, upload_to=functools.partial(video_eval_app.storage.uuid_file_name, *('audio',), **{}))),
                ('name', models.CharField(max_length=255)),
                ('cuts', jsonfield.fields.JSONField(default=list, null=True)),
                ('is_cut', models.BooleanField(default=False)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_videos', to='video_eval_app.dataset')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('questions', jsonfield.fields.JSONField(default=list)),
                ('turk_settings', jsonfield.fields.JSONField(default=dict)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='video_eval_app.dataset')),
            ],
            options={
                'permissions': (('manage_project', 'Manage project'), ('evaluate_project', 'Evaluate project')),
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('invitation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='invitations.invitation')),
                ('role', models.CharField(max_length=255)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invitations', to='video_eval_app.dataset')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invitations', to='video_eval_app.project')),
            ],
            options={
                'abstract': False,
            },
            bases=('invitations.invitation',),
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(storage=video_eval_app.storage.MediaFileSystemStorage(), upload_to=video_eval_app.storage.md5_file_name)),
                ('md5sum', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('start', models.FloatField()),
                ('end', models.FloatField(null=True)),
                ('subtitles', models.FileField(null=True, upload_to=functools.partial(video_eval_app.storage.uuid_file_name, *('segment_sub',), **{}))),
                ('dataset_video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='video_eval_app.datasetvideo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('turk_hit_id', models.CharField(blank=True, max_length=255)),
                ('collected_at', models.DateTimeField(null=True)),
                ('results', jsonfield.fields.JSONField(null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='video_eval_app.project')),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='video_eval_app.segment')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(storage=video_eval_app.storage.MediaFileSystemStorage(), upload_to=video_eval_app.storage.md5_file_name)),
                ('md5sum', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='datasetvideo',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_videos', to='video_eval_app.video'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='videos',
            field=models.ManyToManyField(related_name='datasets', through='video_eval_app.DatasetVideo', to='video_eval_app.video'),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turk_worker_id', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='worker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('segment_created_at', models.DateTimeField()),
                ('turk_assignment_id', models.CharField(max_length=255, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Submitted'), (2, 'Rejected'), (3, 'Accepted'), (4, 'Local')])),
                ('result', jsonfield.fields.JSONField(null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='video_eval_app.task')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='video_eval_app.worker')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='datasetvideo',
            unique_together={('dataset', 'video')},
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['token'], name='video_eval__token_074beb_idx'),
        ),
    ]
